/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}@font-face{font-family:FiraSans_medium;src:url(https://fonts.googleapis.com/css2?family=Fira+Sans:wght@500&display=swap) format("truetype")}@font-face{font-family:FiraSans_light;src:url(https://fonts.googleapis.com/css2?family=Fira+Sans:wght@300&display=swap) format("truetype")}.logo{font:400 28px 'Fira Sans',sans-serif;display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-flow:row nowrap;position:absolute;top:20px;text-decoration:none;padding:20px;color:#000}.logo span{font-family:'Fira Sans',sans-serif;font-weight:600;display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-flow:row nowrap}.logo p{padding:5px 15px;font-size:14px;font-weight:100;margin:0}.navBurger{position:fixed;right:70px;top:30px;cursor:pointer;background:#111;box-sizing:border-box;background-clip:content-box;width:30px;height:24px;border-top:11px solid transparent;border-bottom:11px solid transparent;-webkit-transform:rotate(0);transform:rotate(0);-webkit-transition:all .25s ease-in-out;transition:all .25s ease-in-out;background:0 0}.navBurger:after,.navBurger:before{content:"";position:absolute;background:#000;height:2px;width:100%;right:0;will-change:rotate;-webkit-transform:rotate(0);transform:rotate(0);-webkit-transition:all .5s ease;transition:all .5s ease}.navBurger:before{top:-5px}.navBurger:after{bottom:-5px;width:90%}.navBurger.active{background:0 0;background-clip:content-box}.navBurger.active:before{-webkit-transform:rotate(135deg);transform:rotate(135deg);top:0;background:#eee;width:110%}.navBurger.active:after{bottom:0;-webkit-transform:rotate(-135deg);transform:rotate(-135deg);background:#eee;width:110%}.overlay{position:fixed;background:#2a3140;top:0;right:0;width:100%;height:100%;opacity:0;-webkit-transform-origin:right top;transform-origin:right top;-webkit-transform:scale(0);transform:scale(0);visibility:hidden;-webkit-transition:all .4s ease-in-out;transition:all .4s ease-in-out;overflow:hidden}.overlay.open{opacity:.99;visibility:visible;-webkit-transform:scale(1);transform:scale(1)}.overlay.open li{display:block;-webkit-animation:fadeInRight .4s cubic-bezier(.42,.83,.7,1.5) forwards;animation:fadeInRight .4s cubic-bezier(.42,.83,.7,1.5) forwards;-webkit-animation-delay:.4s;animation-delay:.4s;-webkit-transform:rotate(-7deg);transform:rotate(-7deg);-webkit-transform-origin:right bottom;transform-origin:right bottom}.overlay.open li:nth-of-type(2){-webkit-animation-delay:.5s;animation-delay:.5s}.overlay.open li:nth-of-type(3){-webkit-animation-delay:.6s;animation-delay:.6s}.overlay.open li:nth-of-type(4){-webkit-animation-delay:.7s;animation-delay:.7s}.overlay.open li:nth-of-type(5){-webkit-animation-delay:.8s;animation-delay:.8s}.overlayMenu{position:absolute;text-align:right;right:10vw;bottom:10vw}.overlayMenu ul{list-style:none;padding:0;margin:0 auto;display:block;position:relative;height:100%}.overlayMenu ul li{display:block;position:relative;opacity:0;width:100%}.overlayMenu ul li a{display:inline-block;border:1px solid rgba(255,255,255,.09);color:#fff;text-decoration:none;font-size:30px;padding:10px 40px 10px 40px;margin:5px 0;-webkit-transition:.2s;transition:.2s}.overlayMenu ul li a:active,.overlayMenu ul li a:focus,.overlayMenu ul li a:hover{-webkit-transform:translateX(-2px);transform:translateX(-2px);padding-left:80px;outline:1px solid rgba(255,255,255,.3);background:rgba(255,255,255,.03)}.locked{overflow:hidden}@-webkit-keyframes fadeInRight{0%{opacity:0;left:50px}100%{opacity:1;left:0;-webkit-transform:rotate(0);transform:rotate(0)}}@keyframes fadeInRight{0%{opacity:0;left:50px}100%{opacity:1;left:0;-webkit-transform:rotate(0);transform:rotate(0)}}body,html{width:100%;margin:0;padding:0}.section_01{padding-top:100px;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-flow:column nowrap;-webkit-box-pack:start;justify-content:flex-start;-webkit-box-align:center;align-items:center;width:100%;height:auto}.section_01 .codedesign{position:absolute;display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-flow:row nowrap;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;width:100%;height:300px;top:5vw}@media (min-width:1168px){.section_01 .codedesign{height:400px}}@media (min-width:1168px) and (min-width:1600px){.section_01 .codedesign{height:500px}}@media (min-width:1168px) and (min-width:1600px) and (min-width:2000px){.section_01 .codedesign{height:600px}}.section_01 .codedesign .code{display:-webkit-box;display:flex;color:#5052d0}.section_01 .codedesign .code span{padding:0 .25em}.section_01 .codedesign .design{display:-webkit-box;display:flex;align-self:flex-end;color:#fff}.section_01 .codedesign .design span{padding:0 .4em}.section_01 .codedesign .big_font{font:600 84px 'Fira Sans',sans-serif;padding:50px}@media (min-width:1168px){.section_01 .codedesign .big_font{font-size:102px}}@media (min-width:1168px) and (min-width:1600px){.section_01 .codedesign .big_font{font-size:154px}}@media (min-width:1168px) and (min-width:1600px) and (min-width:2000px){.section_01 .codedesign .big_font{font-size:220px}}.section_01 .codedesign .big_font p{margin:0}.section_01 .codedesign .big_font p span{font-weight:lighter;font-size:.2em;color:#000;border:1px solid #000;border-radius:.5em;border-color:#000}.section_01 svg{width:100%;height:auto;top:100px;overflow:hidden;z-index:-5}.section_01 svg path{width:100%;fill:#5052d0}.section_02{background:#fff;width:100%;height:5000px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
